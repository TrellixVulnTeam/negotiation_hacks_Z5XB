{
  "_args": [
    [
      {
        "raw": "node-then@~0.1",
        "scope": null,
        "escapedName": "node-then",
        "name": "node-then",
        "rawSpec": "~0.1",
        "spec": ">=0.1.0 <0.2.0",
        "type": "range"
      },
      "C:\\Users\\hood3\\OneDrive\\Documents\\GitHub\\hacking_negotiation\\node_modules\\fs-then"
    ]
  ],
  "_from": "node-then@>=0.1.0 <0.2.0",
  "_id": "node-then@0.1.0",
  "_inCache": true,
  "_location": "/node-then",
  "_npmUser": {
    "name": "scothis",
    "email": "scothis@gmail.com"
  },
  "_npmVersion": "1.2.15",
  "_phantomChildren": {},
  "_requested": {
    "raw": "node-then@~0.1",
    "scope": null,
    "escapedName": "node-then",
    "name": "node-then",
    "rawSpec": "~0.1",
    "spec": ">=0.1.0 <0.2.0",
    "type": "range"
  },
  "_requiredBy": [
    "/fs-then"
  ],
  "_resolved": "https://registry.npmjs.org/node-then/-/node-then-0.1.0.tgz",
  "_shasum": "af1a89512cae670082238f1f92d6cb80b75f94d2",
  "_shrinkwrap": null,
  "_spec": "node-then@~0.1",
  "_where": "C:\\Users\\hood3\\OneDrive\\Documents\\GitHub\\hacking_negotiation\\node_modules\\fs-then",
  "bugs": {
    "url": "https://github.com/node-then/node-then/issues"
  },
  "dependencies": {
    "when": "~2.2"
  },
  "description": "Promise aware wrapper for Node modules",
  "devDependencies": {
    "benchmark": "~1.0",
    "microtime": "~0.4",
    "test-support": "~0.3"
  },
  "directories": {},
  "dist": {
    "shasum": "af1a89512cae670082238f1f92d6cb80b75f94d2",
    "tarball": "https://registry.npmjs.org/node-then/-/node-then-0.1.0.tgz"
  },
  "homepage": "https://github.com/node-then/node-then#readme",
  "keywords": [
    "then",
    "promises",
    "when.js",
    "cujojs"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    }
  ],
  "main": "./lib/node-then",
  "maintainers": [
    {
      "name": "scothis",
      "email": "scothis@gmail.com"
    }
  ],
  "name": "node-then",
  "optionalDependencies": {},
  "readme": "node-then\n=========\n\n[![Build Status](https://travis-ci.org/node-then/node-then.png)](https://travis-ci.org/node-then/node-then)\n\nThin wrapper arround Node.js modules that makes the async functions promise\naware. The wrapped methods return a promise the represents the value of the\nasync operation. Traditional callbacks still work, allowing for a transparent\ndrop-in.\n\n\nUsage\n-----\n\nWrap a single function\n```javascript\nvar nodeThen, fs, readFileThen;\n\nnodeThen = require('node-then');\nfs = require('fs');\n\nreadFileThen = nodeThen.wrapFunction(fs.readFile, fs);\n\nreadFileThen('path/to/file').then(function (fileConent) { ... });\n```\n\nWrap an object\n```javascript\nvar nodeThen, fs, fsThen;\n\nnodeThen = require('node-then');\nfs = require('fs');\n\nfsThen = nodeThen.wrapObject(fs, function isEligible(name, prop) {\n\treturn typeof prop === 'function';\n});\n\nfsThen.readFile('path/to/file').then(function (fileConent) { ... });\n```\n\n\nTest Suite\n----------\n\nOur test suite uses Buster.js for correctness and Benchmark.js for performance.\n\nRunning the correctness tests:\n    $ npm test\n\nRunning the performance tests:\n    $ npm run-script benchmark\n\n\nPerformance Impact\n------------------\n\nWrapping a callback with a promise will be slower than the native callbacks.\nThe question should be how much slower vs what benefit. Ultimatly, it's up to\neach developer to decide if the cost/benefit is worthwhile.\n\n```\nnative callback x 749 ops/sec ±0.37% (24 runs sampled)\npromised callback x 697 ops/sec ±0.59% (87 runs sampled)\npromised promise x 710 ops/sec ±0.59% (75 runs sampled)\n\npromised callback is 0.084 ms slower than native callback\npromised promise is 0.069 ms slower than native callback\n```\n\n\nChange Log\n----------\n\nv0.1.0\n- first release\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/node-then/node-then.git"
  },
  "scripts": {
    "benchmark": "node benchmark/run",
    "test": "jshint . && buster test"
  },
  "version": "0.1.0"
}
